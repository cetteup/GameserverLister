name: ci

on:
  push:
    branches: [ "main", "wip/package-structure" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pull-requests: read

jobs:
  lint:
    name: lint
    strategy:
      matrix:
        python-version: [ "3.8", "3.10" ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip' # caching pip dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install package/self
        run: |
          pip install -e .
      - name: Lint with flake8
        run: |
          # stop if there are Python syntax errors or undefined names
          flake8 GameserverLister/** tests/** --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 GameserverLister/** tests/** --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  unit-test:
    name: unit-test
    strategy:
      matrix:
        python-version: [ "3.8", "3.10" ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # caching pip dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install package/self
      run: |
        pip install -e .
    - name: Test with pytest
      run: |
        pytest tests/**
